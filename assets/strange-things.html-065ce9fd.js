const t=JSON.parse('{"key":"v-238158c7","path":"/posts/CS/front-end/philosophy/strange-things.html","title":"怪东西(编程x精神分析)","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-10-27T00:00:00.000Z","title":"怪东西(编程x精神分析)","category":["日记","胡说八道"],"tag":["记录"],"description":"封装。 说到“封装”，我老是想到些奇怪的东西，比如“只进入身体，不进入生活”——别烦我，就解决我这部分需求就好。这次又想到一个，不那么过分的是丝袜..过分点就是那种 sm 里奇奇怪怪的衣服，遮住的几乎全部的皮肤然后只漏出...那个“关键部位”，嗯...也算是一种“接口”罢。。皮肤褶皱可能就像程序内部的乱七八糟的结构，算是一种创伤了。 props。 是前端框架里的一个东西。 或者应该再来点东西，我那时候在看 vue2，里面很重要的一个东西叫组件，就像面向对象的类一样，它们也可以有叫做 parent-child 的关系，但与面向对象的继承不太一样，组件中这种关系叫做“注册”，小组件引入、注册到大组件之中——这里的大组件在最后是要直接展示起作用的。而面向对象中的父类可能只是搭个架子，并不会被实例化，最后干活的是子类。所以，因为发现了这种不同，还有些我也不知道为什么的原因...如果面向对象里的继承把 parent-child 翻译成了父子，那我就不想把组件也叫父子了，我会想把组件这里的引用注册的 parent-child 翻译成母子或者母女...","head":[["meta",{"property":"og:url","content":"https://huamurui.github.io/posts/CS/front-end/philosophy/strange-things.html"}],["meta",{"property":"og:site_name","content":"花木瑞"}],["meta",{"property":"og:title","content":"怪东西(编程x精神分析)"}],["meta",{"property":"og:description","content":"封装。 说到“封装”，我老是想到些奇怪的东西，比如“只进入身体，不进入生活”——别烦我，就解决我这部分需求就好。这次又想到一个，不那么过分的是丝袜..过分点就是那种 sm 里奇奇怪怪的衣服，遮住的几乎全部的皮肤然后只漏出...那个“关键部位”，嗯...也算是一种“接口”罢。。皮肤褶皱可能就像程序内部的乱七八糟的结构，算是一种创伤了。 props。 是前端框架里的一个东西。 或者应该再来点东西，我那时候在看 vue2，里面很重要的一个东西叫组件，就像面向对象的类一样，它们也可以有叫做 parent-child 的关系，但与面向对象的继承不太一样，组件中这种关系叫做“注册”，小组件引入、注册到大组件之中——这里的大组件在最后是要直接展示起作用的。而面向对象中的父类可能只是搭个架子，并不会被实例化，最后干活的是子类。所以，因为发现了这种不同，还有些我也不知道为什么的原因...如果面向对象里的继承把 parent-child 翻译成了父子，那我就不想把组件也叫父子了，我会想把组件这里的引用注册的 parent-child 翻译成母子或者母女..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-06-11T11:38:25.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"记录"}],["meta",{"property":"article:published_time","content":"2022-10-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-11T11:38:25.000Z"}]]},"headers":[{"level":3,"title":"封装。","slug":"封装。","link":"#封装。","children":[]},{"level":3,"title":"props。","slug":"props。","link":"#props。","children":[]},{"level":3,"title":"加层数，其实是在让时间变慢。","slug":"加层数-其实是在让时间变慢。","link":"#加层数-其实是在让时间变慢。","children":[]},{"level":3,"title":"软件工程与卫生纸。","slug":"软件工程与卫生纸。","link":"#软件工程与卫生纸。","children":[]},{"level":3,"title":"人与事。","slug":"人与事。","link":"#人与事。","children":[]},{"level":3,"title":"开闭原则","slug":"开闭原则","link":"#开闭原则","children":[]}],"git":{"createdTime":1670731928000,"updatedTime":1686483505000,"contributors":[{"name":"huamurui","email":"yuntai013@outlook.com","commits":5}]},"readingTime":{"minutes":5.67,"words":1702},"filePathRelative":"posts/CS/front-end/philosophy/strange-things.md","localizedDate":"2022年10月27日","excerpt":"<h3> 封装。</h3>\\n<p>说到“封装”，我老是想到些奇怪的东西，比如“只进入身体，不进入生活”——别烦我，就解决我这部分需求就好。这次又想到一个，不那么过分的是丝袜..过分点就是那种 sm 里奇奇怪怪的衣服，遮住的几乎全部的皮肤然后只漏出...那个“关键部位”，嗯...也算是一种“接口”罢。。皮肤褶皱可能就像程序内部的乱七八糟的结构，算是一种创伤了。</p>\\n<h3> props。</h3>\\n<p>是前端框架里的一个东西。</p>\\n<p>或者应该再来点东西，我那时候在看 vue2，里面很重要的一个东西叫组件，就像面向对象的类一样，它们也可以有叫做 parent-child 的关系，但与面向对象的继承不太一样，组件中这种关系叫做“注册”，小组件引入、注册到大组件之中——这里的大组件在最后是要直接展示起作用的。而面向对象中的父类可能只是搭个架子，并不会被实例化，最后干活的是子类。所以，因为发现了这种不同，还有些我也不知道为什么的原因...如果面向对象里的继承把 parent-child 翻译成了父子，那我就不想把组件也叫父子了，我会想把组件这里的引用注册的 parent-child 翻译成母子或者母女...</p>","autoDesc":true}');export{t as data};
