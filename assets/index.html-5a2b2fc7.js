const t=JSON.parse('{"key":"v-53d5f470","path":"/posts/CS/back-end/","title":"服务端","lang":"zh-CN","frontmatter":{"title":"服务端","icon":"autumn","date":"2022-03-27T00:00:00.000Z","category":["指南"],"description":"服务端的知识可能在这里 SSR-SSG 可能有说过一些 在 Java 和 JavaScript 中，也稍微提了些编程语言和生态相关的东西，但，我今天看到了本书，是， ruby 的作者写的一本书。 语言是重要的，程序员的体验是重要的...，在设计模式那一节，《设计模式》并不是那些模式的开山鼻祖，许多早就广泛应用了，那本书做的更多的是归类总结，并且给它们一个名字，对的，名字。有了名字之后，才可能会有之后的共识... 神话故事里因为不同语言而放弃修塔... 某些时候也很真实。 语言是重要的...我现在使用的各种工具是，写下的文字是，它们本身可能确实什么都不是，但我好像能看到在这上面的累积，数不清的人的思考，与共识。","head":[["meta",{"property":"og:url","content":"https://huamurui.github.io/posts/CS/back-end/"}],["meta",{"property":"og:site_name","content":"花木瑞"}],["meta",{"property":"og:title","content":"服务端"}],["meta",{"property":"og:description","content":"服务端的知识可能在这里 SSR-SSG 可能有说过一些 在 Java 和 JavaScript 中，也稍微提了些编程语言和生态相关的东西，但，我今天看到了本书，是， ruby 的作者写的一本书。 语言是重要的，程序员的体验是重要的...，在设计模式那一节，《设计模式》并不是那些模式的开山鼻祖，许多早就广泛应用了，那本书做的更多的是归类总结，并且给它们一个名字，对的，名字。有了名字之后，才可能会有之后的共识... 神话故事里因为不同语言而放弃修塔... 某些时候也很真实。 语言是重要的...我现在使用的各种工具是，写下的文字是，它们本身可能确实什么都不是，但我好像能看到在这上面的累积，数不清的人的思考，与共识。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-28T04:00:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-28T04:00:58.000Z"}]]},"headers":[],"git":{"createdTime":1679976058000,"updatedTime":1679976058000,"contributors":[{"name":"huamurui","email":"yuntai013@outlook.com","commits":1}]},"readingTime":{"minutes":1.28,"words":384},"filePathRelative":"posts/CS/back-end/README.md","localizedDate":"2022年3月27日","excerpt":"<p>服务端的知识可能在这里<br>\\n<a href=\\"/posts/CS/front-end/philosophy/spa-ssr-ssg.html\\" target=\\"blank\\">SSR-SSG</a><br>\\n可能有说过一些</p>\\n<p>在\\n<a href=\\"/posts/CS/back-end/Java/\\" target=\\"blank\\">Java</a>\\n和\\n<a href=\\"/posts/CS/front-end/philosophy/javascript.html\\" target=\\"blank\\">JavaScript</a>\\n中，也稍微提了些编程语言和生态相关的东西，但，我今天看到了本书，是， ruby 的作者写的一本书。<br>\\n语言是重要的，程序员的体验是重要的...，在设计模式那一节，《设计模式》并不是那些模式的开山鼻祖，许多早就广泛应用了，那本书做的更多的是归类总结，并且给它们一个名字，对的，名字。有了名字之后，才可能会有之后的共识... 神话故事里因为不同语言而放弃修塔... 某些时候也很真实。<br>\\n语言是重要的...我现在使用的各种工具是，写下的文字是，它们本身可能确实什么都不是，但我好像能看到在这上面的累积，数不清的人的思考，与共识。</p>","autoDesc":true}');export{t as data};
