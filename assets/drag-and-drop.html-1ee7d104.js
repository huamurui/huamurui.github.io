import{a6 as o,F as n,G as s,D as e,R as l,M as i,ad as r,V as a}from"./framework-913605ae.js";const p={},u=e("p",null,"就是说...原来在html标签上写个 draggable=true 就可以给元素添加拖拽属性...什么js监听鼠标点击移动然后通过对大小布局时间的一系列计算处理这个事件什么的...不存在的，爬一边去。 而图片等等元素是自带这个东西的。 ...纯html,css,js三件套就已经这么高级了吗...感觉，要变成笨蛋了。",-1),c=e("p",null,"但我还是去github看了好多仓库，这个功能...好像还挺热的。感觉如果用vue写的话，可以和之前的布局和多级组件组合一下弄出些东西...然而这部分也是早就有人写了，而且好多哇...。",-1),d={href:"https://vueuse.org/core/useDraggable",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/clauderic/dnd-kit",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/taye/interact.js",target:"_blank",rel:"noopener noreferrer"},b=r('<p>哈...光看都看不过来了...react的有好多</p><p>hooks 和 component 有什么区别吗...</p><p>又看到一个..........state是状态..., 这个我知道， statement 声名语句是带有状态的部分...而基本的函数会尽量不带状态。</p><p>ok，挖坑。我会想用react写一个拖拽的东西..或者单纯把那个dnd-kit的一部分抄出来。另外提一嘴，好多我写vue时候脑子里想的东西，被react的文档，那个新出的还在beta的文档说出来了。 感觉...react的文档会更实用有实践色彩也更精简，api只讲了几个关键的...或者react本身就比vue要轻快很多？...而vue的东西...一上来有点多说真的...... 可能算是我第一次读这么大一堆英文文档，感觉还不错。</p><h3 id="_2023-01-13" tabindex="-1"><a class="header-anchor" href="#_2023-01-13" aria-hidden="true">#</a> 2023-01-13</h3><p>时隔多年(确信)，感觉可能可以，也需要重新开坑了。<br> 想了解的更多一些，代码规范、测试，接口设计，兼容性，文档。</p><p>也许还是会用 vue 写...再或...什么都不用。但是，这里要做的不是 hello world，也不再是玩具，而是一个，有一定实用性，期望有别人读有别人用的，能用，也能维护的东西。嗯，要认真做，做的靠谱一些。</p><p>而具体内容上，我会把拖拽放一个比较重要的位置...配合布局，表单，多级组件，要让他们可以交互——用拖拽的方式。 而除去拖拽，针对移动端，一些手势操作，也是可以玩的。</p><blockquote><p>ps:其实我总觉得有些东西就是神经病，智障，为什么要日期选择器？直接输一串数字不方便吗...真要看日历，也是，到处都有。...掌握符号本身的能力...</p></blockquote><p>先学学</p><ul><li>如何变得靠谱： <ul><li>代码规范 <ul><li>eslint 基本检测</li><li>prettier 自动格式化</li></ul></li><li>测试 <ul><li>单元测试 jest</li><li>e2e/集成 测试 Cypress</li><li>自动化测试.. puppeteer 这个貌似也能做爬虫...nodejs模拟浏览器环境...？</li></ul></li><li>文档 <ul><li>面向用户，接口、演示文档</li><li>代码、设计文档</li></ul></li><li>代码管理 <ul><li>git</li><li>husky</li><li>CI CD/github action，npm publish</li></ul></li></ul></li></ul>',11),g=e("br",null,null,-1),k={href:"https://arco.design/vue/component/tree",target:"_blank",rel:"noopener noreferrer"},m=e("br",null,null,-1),f={href:"https://docs.dndkit.com/",target:"_blank",rel:"noopener noreferrer"},v=e("br",null,null,-1),y={href:"https://jbaysolutions.github.io/vue-grid-layout/",target:"_blank",rel:"noopener noreferrer"},j=r("<ul><li><p>技术选型</p><ul><li>vue3</li><li>vite</li><li>typescript</li><li>SCSS</li><li>unocss</li></ul></li><li><p>做什么</p><ul><li>tree <ul><li>这是一种要着重处理的数据结构</li><li>array to tree</li></ul></li><li>grid <ul><li>这是，基本的布局，当然..体现一下 grid 的特性</li><li>如果可以的话..把，我之前的 waterfall 修一下...</li></ul></li><li>dnd <ul><li>这是交互</li></ul></li></ul></li></ul><p>数据，布局，交互，这三个东西，是我想要做的东西。...也许是种，小型的 MVC/MVVM 之类的演练...<br> 说到这里我又好好奇..这些前端框架做了什么...工程问题...</p><p>确定需求与形式之后..就，md 赶紧学，不然仓库都不知道怎么建更别说之后写代码了。 ...想放弃...喵</p><p>除了靠谱...实用性，对，就算做组件库，也是，...至少自己用它去做点有用、好玩的东西。好好 think think。 我想做一些，有用又好玩...使用也很简单的东西。 你有什么想要展示的东西吗？ 你想要成为魅魔吗？</p><p>...也许我是真的喜欢 markdown/html 。<br> 富文本编辑器？——大大坑。</p><p>canvas。画布...不仅仅是画布，还有，...用一些硬代码，做一些，协助创作。</p><p>也许有太多有趣的东西了...</p>",7);function V(x,C){const t=a("ExternalLinkIcon");return n(),s("div",null,[u,c,e("p",null,[e("a",d,[l("vueuse-useDraggable"),i(t)])]),e("p",null,[e("a",h,[l("dnd-kit"),i(t)])]),e("p",null,[e("a",_,[l("interact.js"),i(t)])]),b,e("p",null,[l("具体的做什么...看链接，抄！"),g,l(" ["),e("a",k,[l("https://arco.design/vue/component/tree"),i(t)]),l("]"),m,l(" ["),e("a",f,[l("https://docs.dndkit.com/"),i(t)]),l("]"),v,l(" ["),e("a",y,[l("https://jbaysolutions.github.io/vue-grid-layout/"),i(t)]),l("]")]),j])}const M=o(p,[["render",V],["__file","drag-and-drop.html.vue"]]);export{M as default};
