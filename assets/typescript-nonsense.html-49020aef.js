const t=JSON.parse('{"key":"v-1f33f0cc","path":"/posts/CS/front-end/philosophy/typescript-nonsense.html","title":"typescript x 胡说八道 x)","lang":"zh-CN","frontmatter":{"title":"typescript x 胡说八道 x)","icon":"creative","date":"2022-11-23T00:00:00.000Z","category":["胡说八道"],"description":"语言与创伤。（以下纯属胡说八道） 嗯…其实是最近整js和ts，稍微看到了类型在编程中的作用。而类型，是那些变量上的特性，也是那些变量的限制与创伤。 想到了一群人相互认识时的两种常见的了解熟悉对方的方式，一个是介绍兴趣爱好，性格特长，另一个是相互“冒犯”的破冰活动。如果想要在这两者之间找到共性的话，那就是它们都在尝试暴露创伤，无论多么想要温和的去做这些事，都没法避免其中的暴力的那一部分。 我会想对创伤给出一个也许不那么常见的解释，创伤是一个人的边界，难以跨越可能也不需要跨越的地方。 顺着这样含义的创伤，兴趣爱好或者性格气质个性特征…无论你把它叫成是什么，这些玩意从来不是散漫张扬的，而是沉稳固执的。了解一个人的这些玩意，了解一个人的脾气，你就“把握”住了一个人，你知道他的边界，知道他会围绕着什么去行动。 当我选择是一个什么东西的时候，更多时候我在说的是我不是除这以外的所有东西，一个变量的类型是number，它在说的其实是那个变量的类型不是string不是boolean不是array……，它再不会能和字符串相加，不再会有foreach的方法，不再能被true或false填充……在拒绝掉所有的这些之后，它才成为了number。 没有类型的变量像是未分化的干细胞，像是懵懂的孩童，像是仍未还魂的共产主义幽灵，像是...酷儿？它还没有进入这个世界，它仍在游离，它有着无限的可能，让人难以捉摸...","head":[["meta",{"property":"og:url","content":"https://huamurui.github.io/posts/CS/front-end/philosophy/typescript-nonsense.html"}],["meta",{"property":"og:site_name","content":"花木瑞"}],["meta",{"property":"og:title","content":"typescript x 胡说八道 x)"}],["meta",{"property":"og:description","content":"语言与创伤。（以下纯属胡说八道） 嗯…其实是最近整js和ts，稍微看到了类型在编程中的作用。而类型，是那些变量上的特性，也是那些变量的限制与创伤。 想到了一群人相互认识时的两种常见的了解熟悉对方的方式，一个是介绍兴趣爱好，性格特长，另一个是相互“冒犯”的破冰活动。如果想要在这两者之间找到共性的话，那就是它们都在尝试暴露创伤，无论多么想要温和的去做这些事，都没法避免其中的暴力的那一部分。 我会想对创伤给出一个也许不那么常见的解释，创伤是一个人的边界，难以跨越可能也不需要跨越的地方。 顺着这样含义的创伤，兴趣爱好或者性格气质个性特征…无论你把它叫成是什么，这些玩意从来不是散漫张扬的，而是沉稳固执的。了解一个人的这些玩意，了解一个人的脾气，你就“把握”住了一个人，你知道他的边界，知道他会围绕着什么去行动。 当我选择是一个什么东西的时候，更多时候我在说的是我不是除这以外的所有东西，一个变量的类型是number，它在说的其实是那个变量的类型不是string不是boolean不是array……，它再不会能和字符串相加，不再会有foreach的方法，不再能被true或false填充……在拒绝掉所有的这些之后，它才成为了number。 没有类型的变量像是未分化的干细胞，像是懵懂的孩童，像是仍未还魂的共产主义幽灵，像是...酷儿？它还没有进入这个世界，它仍在游离，它有着无限的可能，让人难以捉摸..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-09-13T06:21:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-11-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-13T06:21:59.000Z"}]]},"headers":[],"git":{"createdTime":1671676565000,"updatedTime":1694586119000,"contributors":[{"name":"huamurui","email":"yuntai013@outlook.com","commits":4},{"name":"wenrui","email":"huamurui@outlook.com","commits":1}]},"readingTime":{"minutes":4.86,"words":1457},"filePathRelative":"posts/CS/front-end/philosophy/typescript-nonsense.md","localizedDate":"2022年11月23日","excerpt":"<p>语言与创伤。（以下纯属胡说八道）<br>\\n嗯…其实是最近整js和ts，稍微看到了类型在编程中的作用。而类型，是那些变量上的特性，也是那些变量的限制与创伤。</p>\\n<p>想到了一群人相互认识时的两种常见的了解熟悉对方的方式，一个是介绍兴趣爱好，性格特长，另一个是相互“冒犯”的破冰活动。如果想要在这两者之间找到共性的话，那就是它们都在尝试暴露创伤，无论多么想要温和的去做这些事，都没法避免其中的暴力的那一部分。<br>\\n我会想对创伤给出一个也许不那么常见的解释，创伤是一个人的边界，难以跨越可能也不需要跨越的地方。<br>\\n顺着这样含义的创伤，兴趣爱好或者性格气质个性特征…无论你把它叫成是什么，这些玩意从来不是散漫张扬的，而是沉稳固执的。了解一个人的这些玩意，了解一个人的脾气，你就“把握”住了一个人，你知道他的边界，知道他会围绕着什么去行动。<br>\\n当我选择是一个什么东西的时候，更多时候我在说的是我不是除这以外的所有东西，一个变量的类型是number，它在说的其实是那个变量的类型不是string不是boolean不是array……，它再不会能和字符串相加，不再会有foreach的方法，不再能被true或false填充……在拒绝掉所有的这些之后，它才成为了number。<br>\\n没有类型的变量像是未分化的干细胞，像是懵懂的孩童，像是仍未还魂的共产主义幽灵，像是...酷儿？它还没有进入这个世界，它仍在游离，它有着无限的可能，让人难以捉摸...</p>","autoDesc":true}');export{t as data};
